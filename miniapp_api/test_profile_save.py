#!/usr/bin/env python3
# test_profile_save.py
# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏

import os
import sys
from dotenv import load_dotenv
from db import init_db, upsert_user, get_user, get_user_count

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def test_profile_save():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    
    db_path = os.getenv("DB_PATH", "/home/ubuntu/miniapp_api/app.db")
    print(f"üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –≤: {db_path}")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è (–∫–∞–∫ –æ–Ω–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –æ—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞)
    test_user_id = 123456789
    test_profile = {
        'psn_id': 'TestPSN',  # –≠—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å psn_id, –∞ –Ω–µ real_name
        'platforms': ['üéÆ PlayStation', 'üíª –ü–ö'],
        'modes': ['üìñ –°—é–∂–µ—Ç', 'üèπ –í—ã–∂–∏–≤–∞–Ω–∏–µ'],
        'goals': ['üèÜ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç—Ä–æ—Ñ–µ–µ–≤', 'üîé –£–∑–Ω–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ'],
        'difficulties': ['ü•â –ë—Ä–æ–Ω–∑–∞', 'ü•à –°–µ—Ä–µ–±—Ä–æ'],
        'trophies': []
    }
    
    print(f"üìù –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è:")
    print(f"   User ID: {test_user_id}")
    print(f"   PSN ID: {test_profile['psn_id']}")
    print(f"   Platforms: {test_profile['platforms']}")
    print(f"   Modes: {test_profile['modes']}")
    print(f"   Goals: {test_profile['goals']}")
    print(f"   Difficulties: {test_profile['difficulties']}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å
    print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å...")
    success = upsert_user(db_path, test_user_id, test_profile)
    print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {'–£—Å–ø–µ—à–Ω–æ' if success else '–û—à–∏–±–∫–∞'}")
    
    if success:
        # –ß–∏—Ç–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –æ–±—Ä–∞—Ç–Ω–æ
        print(f"\nüìñ –ß–∏—Ç–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –æ–±—Ä–∞—Ç–Ω–æ...")
        retrieved_profile = get_user(db_path, test_user_id)
        
        if retrieved_profile:
            print(f"‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω:")
            print(f"   User ID: {retrieved_profile['user_id']}")
            print(f"   PSN ID: {retrieved_profile['psn_id']}")
            print(f"   Platforms: {retrieved_profile['platforms']}")
            print(f"   Modes: {retrieved_profile['modes']}")
            print(f"   Goals: {retrieved_profile['goals']}")
            print(f"   Difficulties: {retrieved_profile['difficulties']}")
            print(f"   Trophies: {retrieved_profile['trophies']}")
            print(f"   Updated at: {retrieved_profile['updated_at']}")
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    user_count = get_user_count(db_path)
    print(f"\nüë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î: {user_count}")
    
    return success and retrieved_profile is not None

def test_api_data_format():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—Ö–æ–¥–∏—Ç –æ—Ç API"""
    
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö API...")
    
    # –î–∞–Ω–Ω—ã–µ –∫–∞–∫ –æ–Ω–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –æ—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –≤ API
    api_data = {
        'real_name': '–í–∞—Å–∏–ª–∏–π',
        'psn': 'TestPSN',
        'platforms': ['üéÆ PlayStation', 'üíª –ü–ö'],
        'modes': ['üìñ –°—é–∂–µ—Ç', 'üèπ –í—ã–∂–∏–≤–∞–Ω–∏–µ'],
        'goals': ['üèÜ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç—Ä–æ—Ñ–µ–µ–≤'],
        'difficulties': ['ü•â –ë—Ä–æ–Ω–∑–∞', 'ü•à –°–µ—Ä–µ–±—Ä–æ']
    }
    
    print(f"üìù –î–∞–Ω–Ω—ã–µ –æ—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞:")
    print(f"   real_name: {api_data['real_name']}")
    print(f"   psn: {api_data['psn']}")
    print(f"   platforms: {api_data['platforms']}")
    print(f"   modes: {api_data['modes']}")
    print(f"   goals: {api_data['goals']}")
    print(f"   difficulties: {api_data['difficulties']}")
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –ë–î
    db_data = {
        'psn_id': api_data['psn'],  # psn -> psn_id
        'platforms': api_data['platforms'],
        'modes': api_data['modes'],
        'goals': api_data['goals'],
        'difficulties': api_data['difficulties'],
        'trophies': []
    }
    
    print(f"\nüìù –î–∞–Ω–Ω—ã–µ –¥–ª—è –ë–î:")
    print(f"   psn_id: {db_data['psn_id']}")
    print(f"   platforms: {db_data['platforms']}")
    print(f"   modes: {db_data['modes']}")
    print(f"   goals: {db_data['goals']}")
    print(f"   difficulties: {db_data['difficulties']}")
    print(f"   trophies: {db_data['trophies']}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö
    test_api_data_format()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    success = test_profile_save()
    
    print("\n" + "=" * 50)
    if success:
        print("üéâ –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ –ø—Ä–æ—à–µ–ª!")

if __name__ == "__main__":
    main()
